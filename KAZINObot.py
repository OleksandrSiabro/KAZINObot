from telegram.ext import Application, CommandHandler
import random
ForTest = 0
Balance = 0
Cars = []
Guns = []
# –í—ñ—Ç–∞—î—Ç—å—Å—è
async def start(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text="<b>–í—ñ—Ç–∞—î–º–æ —Ç–µ–±–µ –≤ –Ω–∞—à–æ–º—É –∫–∞–∑–∏–Ω–æüôåüèª!</b>\n \n–©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–ø–∏—Å–æ–∫ –Ω–∞—è–≤–Ω–∏—Ö –∫–æ–º–∞–Ω–¥, –≤–≤–µ–¥—ñ—Ç—å /menu \n–©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–ª—è –Ω–æ–≤–∞—á–∫–∞, –≤–≤–µ–¥—ñ—Ç—å /bonus", parse_mode="HTML")

# –ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
async def menu(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text="<b>| üöÄ –ö–û–ú–ê–ù–î–ò –î–õ–Ø –ü–û–ß–ê–¢–ö–£ –†–û–ë–û–¢–ò üöÄ |</b> \n  \n1. /start - —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –±–æ—Ç–∞ \n2. /menu - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ \n3. /support - –ø—ñ–¥—Ç—Ä–∏–º–∫–∞\n \n<b>| ü™ô –ö–û–ú–ê–ù–î–ò –î–õ–Ø –†–û–ë–û–¢–ò –ó –ë–ê–õ–ê–ù–°–û–ú ü™ô |</b>\n \n1. /balance - –ø–æ–∫–∞–∑–∞—Ç–∏ –º—ñ–π –±–∞–ª–∞–Ω—Å\n2. /bonus - –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–æ–Ω—É—Å\n3. /cars - –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å–≤–æ—ó—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤\n4. /guns - –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –º–æ—î—ó –∑–±—Ä–æ—ó\n \n<b>| üé∞ –Ü–ì–†–û–í–Ü –ö–û–ú–ê–ù–î–ò üé∞ |</b>\n \n1. /games - –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–ø–∏—Å–æ–∫ —ñ–≥—Ä, —â–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –Ω–∞ –¥–∞–Ω–Ω–∏–π –º–æ–º–µ–Ω—Ç\n \n<b>| üí∂–ö–û–ú–ê–ù–î–ò –î–õ–Ø –í–ò–¢–†–ê–¢–ò –ì–†–û–®–ï–ôüí∂ |</b>\n \n1. /market - –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∞—Å–æ—Ä–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏.\n2. /sell_market -  –ø—Ä–æ–¥–∞—Ç–∏ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ç–æ–≤–∞—Ä–∏\n", parse_mode="HTML")

# –ü–æ–∫–∞–∑—É—î –≤–∞—à –±–∞–ª–∞–Ω—Å
async def balance(update, context):
    global Balance
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text=f"–í–∞—à –±–∞–ª–∞–Ω—Å —Å–∫–ª–∞–¥–∞—î {Balance}üí∞")


# –ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ —ñ–≥–æ—Ä
async def games(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text="<b>| –ö–û–õ–ï–°–û –§–û–†–¢–£–ù–ò |</b>\n \n–ü—Ä–æ–∫—Ä—É—Ç—ñ—Ç—å –∫–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω–∏! –í–æ–Ω–æ –¥–∞—î –∑–º–æ–≥—É –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ 500üí∞, –∞–±–æ –≤—Ç—Ä–∞—Ç–∏—Ç–∏ —ó—Ö!\n–í–≤–µ–¥—ñ—Ç—å /game1 —â–æ–± –ø–æ—á–∞—Ç–∏üöÄ\n \n<b>| –ú–û–ù–ï–¢–ö–ê | </b>\n \n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É —Å—Ç–∞–≤–∫—É, –æ–±–µ—Ä—ñ—Ç—å —Å—Ç–æ—Ä–æ–Ω—É –º–æ–Ω–µ—Ç–∫–∏ —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –ø–æ–¥–æ–≤–æ—î–Ω—É —Å—É–º–º—É2Ô∏è‚É£! \n–í–≤–µ–¥—ñ—Ç—å /game2 —â–æ–± –ø–æ—á–∞—Ç–∏üöÄ\n\n<b>| –†–£–õ–ï–¢–ö–ê |</b>\n \n–í–≤–µ–¥—ñ—Ç—å —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏, —á–∏—Å–ª–æ. –Ø–∫—â–æ –Ω–∞ –±–∞—Ä–∞–±–∞–Ω—ñüé∞ –±—É–¥–µ –ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ, —Ç–∞ –≤–∞—à–µ —á–∏—Å–ª–æ —Ç–∞–∫–æ–∂ –±—É–¥–µ —Ç–∞–∫–∏–º —Ç–æ –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —Ç—Ä—ñ–π–Ω–∏–π –≤–∏–≥—Ä–∞—à3Ô∏è‚É£! –ê–ª–µ —è–∫—â–æ –≤–∞—à–µ —á–∏—Å–ª–æ –±—É–¥–µ –Ω–µ–ø–∞—Ä–Ω–∏–º, —Ç–æ –≤–∏ –≤—Ç—Ä–∞—Ç–∏—Ç–µ –¥–≤—ñ–π–Ω—É —Å—Ç–∞–≤–∫—É2Ô∏è‚É£. –¢–∞–∫ —Å–∞–º–æ –∑ –Ω–µ–ø–∞—Ä–Ω–∏–º–∏.\n–í–≤–µ–¥—ñ—Ç—å /game3 —â–æ–± –ø–æ—á–∞—Ç–∏üöÄ\n \n<b>| –ö–£–ë–ò–ö |</b>\n \n–ü–æ—Å—Ç–∞–≤—Ç–µ —Å—Ç–∞–≤–∫—É —Ç–∞ –≤–∏–±–µ—Ä—ñ—Ç—å —á–∏—Å–ª–æ, —â–æ –Ω–∞ –≤–∞—à—É –¥—É–º–∫—É –≤–∏–ø–∞–¥–µ –Ω–∞ –∫—É–±–∏–∫—É. –Ø–∫—â–æ –≤–∞–º –ø–æ—â–∞—Å—Ç–∏—Ç—å, –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É –ø–æ–º–Ω–æ–∂–µ–Ω—É –Ω–∞ —Ü–∏—Ñ—Ä—É, —â–æ –≤–ø–∏–∞–ª–∞ –Ω–∞ –∫—É–±–∏–∫—Éüé≤\n–í–≤–µ–¥—ñ—Ç—å /game4 —â–æ–± –ø–æ—á–∞—Ç–∏üöÄ", parse_mode="HTML")

#–ü–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–ª—è –ø–æ—á–∞—Ç–∫—É
async def bonus(update, context):
    global ForTest
    global Balance
    chat = update.effective_chat
    if ForTest<1:
        Balance += 2000
        await context.bot.send_message(chat_id=chat.id, text="<b>–í—ñ—Ç–∞—é! –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ 500 –±–æ–Ω—É—Å–Ω–∏—Ö üí∞</b>\n–ë—É–¥—å—Ç–µ –æ–±–µ—Ä–µ–∂–Ω—ñ, —ó—Ö –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ª–∏—à–µ 1 —Ä–∞–∑", parse_mode="HTML")
        ForTest += 1

    elif ForTest>=1:
        await context.bot.send_message(chat_id=chat.id, text= "–í–∏ –≤–∂–µ –æ—Ç—Ä–∏–º—É–≤–∞–ª–∏ –±–æ–Ω—É—Å‚ùå")

#–ø—ñ–¥—Ç—Ä–∏–º–∫–∞
async def support(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text= "–í—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è, —â–æ –≤–∏–Ω–∏–∫–ª–∏ –∑–∞–¥–∞–≤–∞–π—Ç–µ –∑–∞ —Ü–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É: +380(67)3757121")

#–ú–∞–≥–∞–∑–∏–Ω
async def shops(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text= "<b>–í–∏–±–µ—Ä—ñ—Ç—å –º–∞–≥–∞–∑–∏–Ω –≤ —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –∑–∞–≤—ñ—Ç–∞—Ç–∏:</b>\n\n<b>–ê–≤—Ç–æ—Å–∞–ª–æ–Ω</b>\n–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, –≤–≤–µ–¥—ñ—Ç—å: /shop auto\n\n<b>–ú–∞–≥–∞–∑–∏–Ω –∑–±—Ä–æ—ó</b>\n–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, –≤–≤–µ–¥—ñ—Ç—å: /shop gun", parse_mode="HTML")

#–ê—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –º–∞–≥–∞–∑–∏–Ω—ñ–≤
async def shop_choise(update, context):
    chat = update.effective_chat
    choise = (context.args[0])
    if choise == "auto":
        await context.bot.send_message(chat_id=chat.id, text= "<b>| –ù–ê–® –ê–°–û–†–¢–ò–ú–ï–ù–¢ |</b>\n \n<b>–ú–æ–ø–µ–¥ –î—Ä–µ–Ω—á–∏–∫ --- 500üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 1\n \n<b>–õ—É–ê–ó 969 --- 1000üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 2\n \n<b>BMW M5 E60 --- 15000üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 3\n \n<b>McLaren 750s --- 60000üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 4\n \n<b>Rolls Royse Cullinan --- 99000üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 5", parse_mode="HTML")
        return
    if choise == "gun":
        await context.bot.send_message(chat_id=chat.id, text= "<b>| –ù–ê–® –ê–°–û–†–¢–ò–ú–ï–ù–¢ |</b>\n \n<b>–°–∞–º–æ–ø–∞–ª --- 300üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏,–≤–≤–µ–¥—ñ—Ç—å: /buy 6\n \n<b>Glock 19--- 1500üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 7\n \n<b>FN SCAR--- 7800üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 8\n \n<b>GBU 57 A/B --- 100000üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 9\n \n<b>–í–æ–¥–æ—Ä–æ–¥–Ω–∞ –±–æ–º–±–∞ --- 1000000üí∞</b>\n–©–æ–± –∫—É–ø–∏—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å: /buy 10", parse_mode="HTML")
        return
    else:
        await context.bot.send_message(chat_id=chat.id, text= "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ–º–∞–Ω–∞–¥")

#–û—Å–Ω–æ–≤–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
async def buy(update, context):
    global Cars
    global Guns
    global Balance
    chat = update.effective_chat
    choise = int(context.args[0])
    if choise == 1:
        if Balance >= 500:
            Cars.append("–ú–æ–ø–µ–¥ –î—Ä–µ–Ω—á–∏–∫")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>–ú–æ–ø–µ–¥ –î—Ä–µ–Ω—á–∏–∫</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫: {Cars}", parse_mode="HTML")
            Balance -= 500
            return
        elif Balance < 500:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 2:
        if Balance >= 1000:
            Cars.append("–õ—É–ê–ó 969")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>–õ—É–ê–ó 969</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫: {Cars}", parse_mode="HTML")
            Balance -= 1000
            return
        elif Balance < 1000:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 3:
        if Balance >= 15000:
            Cars.append("BMW M5 E60")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>BMW E60</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫: {Cars}", parse_mode="HTML")
            Balance -= 15000
            return
        elif Balance < 15000:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 4:
        if Balance >= 60000:
            Cars.append("McLaren 750s")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>McLaren 750s</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫: {Cars}", parse_mode="HTML")
            Balance -= 60000
            return
        elif Balance < 60000:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 5:
        if Balance >= 99000:
            Cars.append("Rolls Royce Cullinan")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>Rolls Royce Cullinan</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫: {Cars}", parse_mode="HTML")
            Balance -= 99000
            return
        elif Balance < 99000:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 6:
        if Balance >= 300:
            Guns.append("–°–∞–º–æ–ø–∞–ª")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>–°–∞–º–æ–ø–∞–ª</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞—Ä—Å–µ–Ω–∞–ª: {Guns}", parse_mode="HTML")
            Balance -= 300
            return
        elif Balance < 300:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 7:
        if Balance >= 1500:
            Guns.append("Glock 19")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>Glock 19</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞—Ä—Å–µ–Ω–∞–ª: {Guns}", parse_mode="HTML")
            Balance -= 1500
            return
        elif Balance < 1500:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 8:
        if Balance >= 7800:
            Guns.append("FN SCAR")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>FN SCAR</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞—Ä—Å–µ–Ω–∞–ª: {Guns}", parse_mode="HTML")
            Balance -= 7800
            return
        elif Balance < 7800:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 9:
        if Balance >= 100000:
            Guns.append("GBU 57 A/B")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>GBU 57 A/B</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞—Ä—Å–µ–Ω–∞–ª: {Guns}", parse_mode="HTML")
            Balance -= 100000
            return
        elif Balance < 100000:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
    if choise == 10:
        if Balance >= 1000000:
            Guns.append("–í–æ–¥–æ—Ä–æ–¥–Ω–∞ –±–æ–º–±–∞")
            await context.bot.send_message(chat_id=chat.id, text= f"–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–∫—É–ø–∫–æ—é <b>–í–æ–¥–æ—Ä–æ–¥–Ω–∞ –±–æ–º–±–∞</b>, —Ç–µ–ø–µ—Ä –≤–∞—à –∞—Ä—Å–µ–Ω–∞–ª: {Guns}.\n(–Ü–¥–µ—è –≤—ñ–¥ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞: –≤–ª—É–ø—ñ—Ç—å –Ω–µ—é –ø–æ –∫—Ä–µ–º–ª—é)", parse_mode="HTML")
            Balance -= 1000000
            return
        elif Balance < 1000000:
            await context.bot.send_message(chat_id=chat.id, text= "—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
            
    else:
        await context.bot.send_message(chat_id=chat.id, text= "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ–º–∞–Ω–∞–¥")

#–ü—Ä–æ–¥–∞–∂
async def shop_sell(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text= "<b>–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ç–æ–≤–∞—Ä—É —è–∫–∏–π –≤–∏ —Ö–æ—á–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç–∏</b>\n \n<b>–ê–≤—Ç–æ–º–æ–±—ñ–ª—å</b>\n–í–≤–µ–¥—ñ—Ç—å: /item_sell auto\n \n<b>–ó–±—Ä–æ—è</b>\n–í–≤–µ–¥—ñ—Ç—å: /item_sell guns", parse_mode="HTML")

#–ê—Å—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂—É
async def item_sell(update, context):
    chat = update.effective_chat
    choise = (context.args[0])
    if choise == "auto":
        await context.bot.send_message(chat_id=chat.id, text= "<b>| –ü–†–û–î–ê–ñ |</b>\n \n<b>–ú–æ–ø–µ–¥ –¥—Ä–µ–Ω—á–∏–∫ --- 450üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 1\n \n<b>–õ—É–ê–ó 969 ---  900üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 2\n \n<b>BMW M5 E60 --- 11500üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 3\n \n<b>McLaren 750s --- 50000üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 4\n \n<b>Rolls Roice --- 82000üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 5", parse_mode="HTML")
        return
    if choise == "guns":
        await context.bot.send_message(chat_id=chat.id, text= "<b>| –ü–†–û–î–ê–ñ |</b>\n \n<b>–°–∞–º–æ–ø–∞–ª --- 280üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 6\n \n<b>Glock 19 ---  1350üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 7\n \n<b>FN SCAR --- 6300üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 8\n \n<b>GBU 57 A/B --- 80000üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 9\n \n<b>–í–æ–¥–æ—Ä–æ–¥–Ω–∞ –±–æ–º–±–∞ --- 800000üí∞</b>\n–©–æ–± –ø—Ä–æ–¥–∞—Ç–∏, –≤–≤–µ–¥—ñ—Ç—å /sell 10", parse_mode="HTML")
        return
    else:
        await context.bot.send_message(chat_id=chat.id, text= "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ–º–∞–Ω–∞–¥")
#–û—Å–Ω–æ–≤–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂—É
async def sell(update, context):
    global Balance
    chat = update.effective_chat
    choise = int(context.args[0])
    if choise == 1:
        if "–ú–æ–ø–µ–¥ –î—Ä–µ–Ω—á–∏–∫" in Cars:
            Balance += 450
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>–ú–æ–ø–µ–¥ –î—Ä–µ–Ω—á–∏–∫</b>", parse_mode="HTML")
            return
        elif "–ú–æ–ø–µ–¥ –î—Ä–µ–Ω—á–∏–∫" not in Cars:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 2:
        if "–õ—É–ê–ó 969" in Cars:
            Balance += 900
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>–õ—É–ê–ó 969</b>", parse_mode="HTML")
            return
        elif "–õ—É–ê–ó 969" not in Cars:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 3:
        if "BMW M5 E60" in Cars:
            Balance += 11500
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>BMW M5 E60</b>", parse_mode="HTML")
            return
        elif "BMW M5 E60" not in Cars:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 4:
        if "McLaren 750s" in Cars:
            Balance += 50000
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>McLaren 750s</b>", parse_mode="HTML")
            return
        elif "McLaren 750s" not in Cars:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 5:
        if "Rolls Royce Cullinan" in Cars:
            Balance += 82000
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>Rolls Royce Cullinan</b>", parse_mode="HTML")
            return
        elif "Rolls Royce Cullinan" not in Cars:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 6:
        if "–°–∞–º–æ–ø–∞–ª" in Guns:
            Balance += 280
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>–°–∞–º–æ–ø–∞–ª</b>", parse_mode="HTML")
            return
        elif "–°–∞–º–æ–ø–∞–ª" not in Guns:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 7:
        if "Glock 19" in Guns:
            Balance += 1350
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>Glock 19</b>", parse_mode="HTML")
            return
        elif "Glock 19" not in Guns:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 8:
        if "FN SCAR" in Guns:
            Balance += 6300
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>FN SCAR</b>", parse_mode="HTML")
            return
        elif "FN SCAR" not in Guns:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 9:
        if "GBU 57 A/B" in Guns:
            Balance += 80000
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>GBU 57 A/B</b>", parse_mode="HTML")
            return
        elif "GBU 57 A/B" not in Guns:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    if choise == 10:
        if "–í–æ–¥–æ—Ä–æ–¥–Ω–∞ –±–æ–º–±–∞" in Guns:
            Balance += 800000
            await context.bot.send_message(chat_id=chat.id, text= "–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ <b>–í–æ–¥–æ—Ä–æ–¥–Ω–∞ –±–æ–º–±–∞</b>", parse_mode="HTML")
            return
        elif "–í–æ–¥–æ—Ä–æ–¥–Ω–∞ –±–æ–º–±–∞" not in Guns:
            await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–º–∞—î —Ü—å–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è‚ùå")
            return
    else:
        await context.bot.send_message(chat_id=chat.id, text= "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ–º–∞–Ω–∞–¥")

#–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º—ñ–π –∞–≤—Ç–æ–ø–∞—Ä–∫
async def my_cars(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text= f"<b>–í–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫: {Cars}</b>", parse_mode="HTML")

#–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º—ñ–π –∞—Ä—Å–µ–Ω–∞–ª
async def my_guns(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text= f"<b>–í–∞—à –∞—Ä—Å–µ–Ω–∞–ª: {Guns}</b>", parse_mode="HTML")

# –ì—Ä–∞ 1, –∫–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω–∏
async def game1(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text="<b>|üé∞–ö–û–õ–ï–°–û –§–û–†–¢–£–ù–òüé∞|</b>\n \n–í–≤–µ–¥—ñ—Ç—å /spin —â–æ–± –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç–∏ –∫–æ–ª–µ—Å–æ", parse_mode="HTML")

#–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç—É –∫–æ–ª–µ—Å–∞
async def spin(update, context):
    global Balance
    chat = update.effective_chat
    wheel = ["-50", "-100", "-200", "-300", "-500", "50", "100", "200", "300", "500"]
    winnings = random.choice(wheel)
    Balance += int(winnings)
    await context.bot.send_message(chat_id=chat.id, text=f"–í–∏ –∑—Ä–æ–±–∏–ª–∏ –æ–±–µ—Ä—Ç –∫–æ–ª–µ—Å–∞ —Ñ–æ—Ä—Ç—É–Ω–∏ —Ç–∞ –æ—Ç—Ä–∏–º–∞–ª–∏ {winnings}üí∞\n–í–∞—à –Ω–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: {Balance}üí∞")

#–≥—Ä–∞ 2, –º–æ–Ω–µ—Ç–∫–∞
async def game2(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text="<b>|ü™ô–ú–û–ù–ï–¢–ö–êü™ô|</b>\n \n–í–≤–µ–¥—ñ—Ç—å /flip, —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è (–û—Ä–µ–ª –∞–±–æ –†–µ—à–∫–∞) —â–æ–± –ø—ñ–¥–∫–∏–Ω—É—Ç–∏ —ó—ó\n–ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥—É –∫–æ–º–∞–Ω–¥–∏: /flip 200 –æ—Ä–µ–ª", parse_mode="HTML")

#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—ñ–¥–∫–∏–¥—É –º–æ–Ω–µ—Ç–∫–∏
async def flip_da_coin(update, context):
    global Balance
    chat = update.effective_chat
    user_choice = context.args[1].lower()
    money_choice = int(context.args[0])

    if money_choice > Balance:
        await context.bot.send_message(chat_id=chat.id, text= "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
        return
    if money_choice < 0:
        await context.bot.send_message(chat_id=chat.id, text= "–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –≤—ñ–¥—î–º–Ω–µ —á–∏—Å–ª–æ —è–∫ —Å—Ç–∞–≤–∫—É‚ùå")
    if user_choice not in ["–æ—Ä–µ–ª", "—Ä–µ—à–∫–∞"]:
        await context.bot.send_message(chat_id=chat.id, text="<b>–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä</b>\n–í–≤–µ–¥—ñ—Ç—å /flip, —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è(–û—Ä–µ–ª –∞–±–æ –†–µ—à–∫–∞)", parse_mode="HTML")
        return

    flip_result = random.choice(["–û—Ä–µ–ª", "–†–µ—à–∫–∞"])
    winnings = money_choice*2

    if flip_result.lower() == user_choice:
        Balance-=money_choice
        Balance += winnings
        await context.bot.send_message(chat_id=chat.id, text=f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥–∫–∏–¥–∞–Ω–Ω—è:</b> {flip_result} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞ \n<b>–í–∞—à –≤–∏–≥—Ä–∞—à:</b> {winnings}üí∞", parse_mode="HTML")
    else:
        Balance -= money_choice
        await context.bot.send_message(chat_id=chat.id, text=f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥–∫–∏–¥–∞–Ω–Ω—è:</b> {flip_result} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞ \n<b>–ü—Ä–æ–≥—Ä–∞–Ω—ñ –≥—Ä–æ—à—ñ:</b> {money_choice}üí∞", parse_mode="HTML")

#–ì—Ä–∞ 3, —Ä—É–ª–µ—Ç–∫–∞
async def game3(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text="<b>|üéü–†–£–õ–ï–¢–ö–êüéü|</b>\n \n–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /bet —Ç–∞ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏, –ø—ñ—Å–ª—è —Ü—å–æ–≥–æ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 36\n–ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥—É –∫–æ–º–∞–Ω–¥–∏: /bet 200 13", parse_mode="HTML")

#–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É–ª–µ—Ç–∫–∏
async def bet(update, context):
    global Balance
    chat = update.effective_chat
    bet_amount = int(context.args[0])
    num_chose = int(context.args[1])
    if num_chose <= 36 and num_chose >= 1:
        if bet_amount > Balance:
            await context.bot.send_message(chat_id=chat.id, text=" –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
            return
        result = random.choice(["–ü–∞—Ä–Ω–µ", "–ù–µ–ø–∞—Ä–Ω–µ"])
        winning = bet_amount * 3
        if result == "–ü–∞—Ä–Ω–µ":
            if num_chose % 2 == 0:
                Balance-=bet_amount
                Balance+=winning
                await context.bot.send_message(chat_id=chat.id, text=f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b> {result} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞ \n<b>–í–∞—à –≤–∏–≥—Ä–∞—à:</b> {winning}üí∞", parse_mode="HTML")
            elif num_chose % 2 != 0:
                Balance -= bet_amount*2
                await context.bot.send_message(chat_id=chat.id, text=f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b> {result} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞ \n<b>–ü—Ä–æ–≥—Ä–∞–Ω—ñ –≥—Ä–æ—à—ñ:</b> {bet_amount*2}üí∞", parse_mode="HTML")
        elif result == "–ù–µ–ø–∞—Ä–Ω–µ":
            if num_chose % 2 != 0:
                Balance-=bet_amount
                Balance+=winning
                await context.bot.send_message(chat_id=chat.id, text=f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b> {result} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞ \n<b>–í–∞—à –≤–∏–≥—Ä–∞—à:</b> {winning}üí∞", parse_mode="HTML")
            elif num_chose % 2 == 0:
                Balance -= bet_amount*2
                await context.bot.send_message(chat_id=chat.id, text=f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b> {result} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞ \n<b>–ü—Ä–æ–≥—Ä–∞–Ω—ñ –≥—Ä–æ—à—ñ:</b> {bet_amount*2}üí∞", parse_mode="HTML")
    elif num_chose>36:
        await context.bot.send_message(chat_id=chat.id, text= "–ß–∏—Å–ª–æ –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–µ")
    elif num_chose<1:
        await context.bot.send_message(chat_id=chat.id, text= "–ß–∏—Å–ª–æ –∑–∞–Ω–∞–¥—Ç–æ –º–∞–ª–µ")
# Game 4: Dice Roll
async def game4(update, context):
    chat = update.effective_chat
    await context.bot.send_message(chat_id=chat.id, text="<b>|üé≤–ö–ò–î–û–ö –ö–£–ë–ò–ö–êüé≤|</b>\n \n–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /roll, —Å—É–º–º—É —Å—Ç–∞–≤–∏, —Ç–∞ —Ü–∏—Ñ—Ä—Ü—É –≤—ñ–¥ 1 –¥–æ 6 –¥–ª—è –∫–∏–¥–∫–∞ –∫—É–±–∏–∫–∞\n–ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥—É –∫–æ–º–∞–Ω–¥–∏: /roll 200 5", parse_mode="HTML")

async def roll(update, context):
    global Balance
    chat = update.effective_chat
    roll_amount = int(context.args[0])
    if roll_amount > Balance:
        await context.bot.send_message(chat_id=chat.id, text="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É‚ùå")
        return
    dice_roll = random.randint(1, 6)
    user_choice = int(context.args[1])
    winnings = 0
    if user_choice < 1:
        await context.bot.send_message(chat_id=chat.id, text="–ß–∏—Å–ª–æ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 1 –¥–æ 6, –≤–∞—à–µ —á–∏—Å–ª–æ –∑–∞–Ω–∞–¥—Ç–æ –º–∞–ª–µ", parse_mode="HTML")
        return
    if user_choice > 6:
        await context.bot.send_message(chat_id=chat.id, text="–ß–∏—Å–ª–æ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 1 –¥–æ 6, –≤–∞—à–µ —á–∏—Å–ª–æ –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–µ", parse_mode="HTML")
        return
    if user_choice >= 1 or user_choice <= 6:
        if user_choice == dice_roll:
            Balance -= roll_amount
            winnings = user_choice * roll_amount
            Balance += winnings
            await context.bot.send_message(chat_id=chat.id, text=f"<b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b> {dice_roll} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞\n<b>–í–∞—à –≤–∏–≥—Ä–∞—à:</b> {winnings}üí∞", parse_mode="HTML")
            return
        elif user_choice != dice_roll:
            Balance -= roll_amount
            await context.bot.send_message(chat_id=chat.id, text=f"<b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b> {dice_roll} \n<b>–û–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {Balance}üí∞\n<b>–ü—Ä–æ–≥—Ä–∞–Ω—ñ –≥—Ä–æ—à—ñ:</b> {roll_amount}üí∞", parse_mode="HTML")

application = Application.builder().token("6049849076:AAEwFmrJukP72pDpMBenN4rT9FDfM5UXeLI").build()
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("menu", menu))
application.add_handler(CommandHandler("balance", balance))
application.add_handler(CommandHandler("games", games))
application.add_handler(CommandHandler("game1", game1))
application.add_handler(CommandHandler("spin", spin))
application.add_handler(CommandHandler("game2", game2))
application.add_handler(CommandHandler("flip", flip_da_coin))
application.add_handler(CommandHandler("game3", game3))
application.add_handler(CommandHandler("bet", bet))
application.add_handler(CommandHandler("game4", game4))
application.add_handler(CommandHandler("roll", roll))
application.add_handler(CommandHandler("bonus", bonus))
application.add_handler(CommandHandler("support", support))
application.add_handler(CommandHandler("market", shops))
application.add_handler(CommandHandler("shop", shop_choise))
application.add_handler(CommandHandler("buy", buy))
application.add_handler(CommandHandler("sell_market", shop_sell))
application.add_handler(CommandHandler("item_sell", item_sell))
application.add_handler(CommandHandler("sell", sell))
application.add_handler(CommandHandler("cars", my_cars))
application.add_handler(CommandHandler("guns", my_guns))
application.run_polling()
